ProfileSlice:
    profileData: []
    isLoading: false
    reducer: {}
    extraReducer: {
        getProfileData: () {
            profileData = action.payload
            isLoading = false
        }
    }


AuthSlice: 
    isAuth: false


    reducers: {
        login(state) {
            state.isAuth = true
        }
        logout() {
            state.isAuth = false
        }
    }



    login(refreshToken, accessToken) => {
        tokenManager.setAccessToken()
        tokenManager.setRefreshToken() // ставить его в localStorage
        dispatch(login())
    }

    logout() => {
        tokenManager.removeTokens()
        dispatch(logout())
    }


    loginForm => 

        onFinish => {

            userData

            try {
                await ApiLogin({userData})
                login(tokens)
            } catch {
                errorNotification
            }
        }


    logoutPage => 
        logoutHandler() {
            try {
                await logoutApi()
                logout()
            } catch {
                errorNotification()
            }
        }



ProtectedRoute => 

        if(refreshToken) {
            try {
                const data = refresh(refreshToken)
                login({tokens})
            } catch {
                logout()
            }
        }

        return isAuth ? children : navigate('/login')

        


Дейлик

Вчера:
    -отдых
Сегодня:
    -доделываю авторизацию

#allwkadis